---
parser: '@typescript-eslint/parser'
parserOptions:
  project: tsconfig.json
  sourceType: module

settings:
  react:
    version: detect

plugins:
  - simple-import-sort
  - unused-imports
  - jsx-a11y

extends:
  # - react-app
  - 'plugin:@typescript-eslint/recommended'
  - 'plugin:jsx-a11y/recommended'
  - 'plugin:react/recommended'
  - 'plugin:react-hooks/recommended'
  - prettier

env:
  node: true

globals:
  __DEV__: true

# more rules here https://github.com/facebook/create-react-app/blob/main/packages/eslint-config-react-app/index.js
rules:
  '@typescript-eslint/no-empty-interface': 'off'
  '@typescript-eslint/interface-name-prefix': 'off'
  '@typescript-eslint/explicit-function-return-type': 'off'
  '@typescript-eslint/no-explicit-any': 'off'
  '@typescript-eslint/camelcase': 'off'
  'no-use-before-define': 'off'
  # '@typescript-eslint/no-unused-vars':
  #   - 'error'
  #   - argsIgnorePattern: '^_'
  ## disable '@typescript-eslint/no-unused-vars' and use 'unused-imports' plugin/rules instead
  '@typescript-eslint/no-unused-vars': 'off'
  'unused-imports/no-unused-imports': 'error'
  'unused-imports/no-unused-vars':
    - 'warn'
    - argsIgnorePattern: '^_'
  '@typescript-eslint/no-use-before-define':
    - error
    - functions: false
  # disable this temporarily since we have a lot of JS files
  # and typescript-eslint runs against JS files too
  '@typescript-eslint/explicit-module-boundary-types': off
  '@typescript-eslint/ban-ts-comment': 'off'
  '@typescript-eslint/ban-ts-ignore': 'off'
  react-hooks/rules-of-hooks: error
  react-hooks/exhaustive-deps:
    - warn
    - additionalHooks: useRecoilCallback
  simple-import-sort/imports: error
  'react/prop-types': warn
#   quotes: ["error", "single"]
#   strict: ["error", "never"]
#   no-console: "warn"
